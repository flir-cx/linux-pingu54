
/*
 * Copyright 2016 FLIR Systems.
 *
 * The code contained herein is licensed under the GNU General Public
 * License. You may obtain a copy of the GNU General Public License
 * Version 2 or later at the following locations:
 *
 * http://www.opensource.org/licenses/gpl-license.html
 * http://www.gnu.org/copyleft/gpl.html
 */

#include <dt-bindings/input/input.h>

/ {

	erla-keyboard {
		compatible = "gpio-keys";

		autorepeat;
		keypad_1n {
			label = "EVRO-Keypad1-Prog";
			gpio-key;
			gpios = <&evro_pca9534_0x48 5 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_F10>;
		};
// Keys are not yet used, but support is provided in hardware for these keys...
//		keypad_2n {
//			label = "keypad2";
//			gpio-key;
//			gpios = <&evro_pca9534_0x48 6 GPIO_ACTIVE_LOW>;
//			linux,code = <>;
//		};
//		keypad_3n {
//			label = "keypad3";
//			gpio-key;
//			gpios = <&evro_pca9534_0x48 7 GPIO_ACTIVE_LOW>;
//			linux,code = <>;
//		};
	};


	clocks{
	evro_clk24m: clk24m{
			compatible = "fixed-clock";
                        #clock-cells = <0>;
			clock-frequency = <24000000>;
			/*vin-supply = <&reg_vcm_dovdd_1v8>;*/
		};
	};

	vcam {
		compatible = "flir,vcam";
		vcam_pwdn-gpio = <&evro_pca9534_0x46 2 GPIO_ACTIVE_HIGH>;
		vcam_reset-gpio = <&evro_pca9534_0x46 3 GPIO_ACTIVE_LOW>;
		vcam_clk_en-gpio = <&evro_pca9534_0x48 0 GPIO_ACTIVE_LOW>;
		/*dvdd-supply = <&reg_vcm_dovdd_1v8>;
		  avdd-supply = <&reg_vcm_avdd_2v8>;*/
		flipped_sensor = <0>;
		  
	};

	regulators {
		compatible = "simple-bus";

	        reg_vcm_dovdd_1v8: reg_vcm_dovdd_1v8 {
			compatible = "regulator-fixed";
			regulator-name = "VCM_DOVDD";
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
			gpio = <&evro_pca9534_0x46 0 GPIO_ACTIVE_HIGH>;
			vin-supply = <&reg_ldm_3v3>;
			enable-active-high;
		};

	        reg_vcm_avdd_2v8: reg_vcm_avdd_2v8 {
			compatible = "regulator-fixed";
			regulator-name = "VCM_AVDD";
			regulator-min-microvolt = <2800000>;
			regulator-max-microvolt = <2800000>;
			vin-supply = <&reg_vcm_dovdd_1v8>;
		};

	        reg_ldm_2v9: reg_ldm_2v9 {
			compatible = "regulator-fixed";
			regulator-name = "LDM_2V9";
			regulator-min-microvolt = <2900000>;
			regulator-max-microvolt = <2900000>;
			gpio = <&evro_pca9534_0x48 3 GPIO_ACTIVE_HIGH>;
			vin-supply = <&reg_ldm_3v3>;
			enable-active-high;
		};

	        reg_ldm_3v3: reg_ldm_3v3 {
			compatible = "regulator-fixed";
			regulator-name = "3V3A";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			gpio = <&evro_pca9534_0x46 1 GPIO_ACTIVE_HIGH>;
			enable-active-high;
		};

		reg_optics_power: reg_optics_power{
			compatible = "regulator-fixed";
			regulator-name = "optics_power";
			gpio = <&evro_pca9534_0x46 4 GPIO_ACTIVE_HIGH>;
			vin-supply = <&reg_ldm_3v3>;
			enable-active-high;
		};

		reg_position_sensor: reg_position_sensor{
			compatible = "regulator-fixed";
			regulator-name = "position_sensor";
			gpio = <&evro_pca9534_0x46 6 GPIO_ACTIVE_HIGH>;
		};

		reg_ring_sensor: reg_ring_sensor{
			compatible = "regulator-fixed";
			regulator-name = "ring_sensor";
			gpio = <&evro_pca9534_0x46 7 GPIO_ACTIVE_HIGH>;
		};

		reg_motor_sleep: reg_motor_sleep{
			compatible = "regulator-fixed";
			regulator-name = "motor_sleep";
			gpio = <&evro_pca9534_0x48 2 GPIO_ACTIVE_HIGH>;
			enable-active-high;
		};


	};
  };



&i2c3 {
evro_24c02: evro_24c02@56 {
		compatible = "atmel,24c02";
		reg = <0x56>;
		pagesize = <16>;
	};

evro_pca9534_0x48: evro_pca9534_0x48@24 {
		compatible = "nxp,pca9534";
		reg = <0x24>;
		gpio-controller;
		vcc-supply = <&DA9063_LDO11>;
		interrupt-parent = <&gpio4>; //I2C3_Alert_n
		//interrupts = <7 IRQ_TYPE_LEVEL_LOW>;  //ec101-c
		interrupts = <5 IRQ_TYPE_LEVEL_LOW>;    //ec101-d
		interrupt-controller;
		interrupts-shared;
                #interrupt-cells = <2>;
                #gpio-cells = <2>;
		//B0 M0
		//B1 M1
		//B2 Sleep_n
		//B3 LDM_2V9_EN
		//B4 Optics_En
		//B5 Key_Pad_1_n
		//B6 Key_Pad_2_n
		//B7 Key_Pad_3_n
		};

evro_as3649: evro_as3649@30 {
		compatible = "ams,as3649";
		reg = <0x30>;
		reset-gpio = <&evro_pca9534_0x46 5 GPIO_ACTIVE_LOW>;

		/*Inductor I limit*/
		I_limit_mA = /bits/ 16 <6000>;
		/*Low battery limit: limit output current in flash mode*/
		vin_low_v_mV = /bits/ 16 <3200>;
		/*flash*/
		max_peak_current_mA =/bits/ 16 <1250>;
		max_peak_duration_ms = /bits/ 16 <1000>;
		default_duration_ms = /bits/ 16 <500>;
		/*torch*/
		max_sustained_current_mA = /bits/ 16 <245>;
		min_current_mA = /bits/ 16 <100>;
		/* Leds forward voltage at maximum current */
		vf_mV = /bits/ 16 <4000>;
		ntc_on = /bits/ 8 <1>;
		// Enable overtemperature protection, torch/flash is
		// turned off when (ntc_current_uA * R_ntc < 1Volt)*

		ntc_current_uA = /bits/ 16 <280>;  // 0 .. 600uA, 40uA steps.
		//Termistor on EVEL is NCP15WF104F03RC 100Kohm 1%
		//
		// 240 uA, about 106 degrees
		// 280 uA, about 110 degrees = 3.77kohm --> 1V
		// 320 uA, about 116 degrees
	};

evro_lm3644: evro_lm3644@63 {
		compatible = "ti,lm3644";
		reg = <0x63>;
};

evro_lm3646: evro_lm3646@67 {
		compatible = "ti,lm3646";
		reg = <0x67>;
		reset-gpio = <&evro_pca9534_0x46 5 GPIO_ACTIVE_LOW>;

		ntc_on = /bits/ 8 <1>;
		ntc_volt_mV = /bits/ 16 <200>;

	};

};

&i2c4 {
evro_pca9534_0x46: evro_pca9534_0x46@23 {
		compatible = "nxp,pca9534";
		reg = <0x23>;
		gpio-controller;
		vcc-supply = <&DA9063_LDO11>;
		interrupt-parent = <&gpio4>; //I2C3_Alert_n
		interrupts = <5 IRQ_TYPE_LEVEL_LOW>;
		interrupt-controller;
		interrupts-shared;
                #interrupt-cells = <2>;
                #gpio-cells = <2>;
		//B0 VCM_DOVDD_EN output
		//B1 -
		//B2 VCM_PWDN output
		//B3 VCM_RESET_n output
		//B4 OPTICS_POWER_EN output
		//B5 LED_ON output
		//B6 POSITION_SENSOR_EN_n output
		//B7 RING_SENSOR_EN_n output
	};

rangefinder:rangefinder@76 {
		compatible = "precaster,ca111";
		reg = <0x76>;
		interrupt-parent = <&gpio4>; //beware... not used by the driver...
		interrupts = <11 2>;
		vin-supply = <&reg_ldm_2v9>;
	};
	
};
